Insert and search operations are pretty fast as we have to traverse on only the word length. While, searching for a prefix, we have to find all the suggessions for it by going through all its children. To generate suffixes, we first call `find` on the Trie class to find our prefix. Then, with the returned node, we can call `suffixes` on the Trie class,  which uses recursion to search all nodes in children and call itself until the node is last.

Time complexity: O(nk) where n is the word length and k is number of children in each node
Space complexity: O(nk)